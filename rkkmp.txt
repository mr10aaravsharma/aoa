#include <stdio.h>
#include <malloc.h>
#include <string.h>
int *calculate_lsp(char *pattern)
{
int m = strlen(pattern);
int *lsp = (int *)malloc(sizeof(int) * m);
lsp[0] = 0;
int i = 1, len = 0;
while (i < m) {
if (pattern[i] == pattern[len]) { 
    ++len;
    lsp[i] = len;
    ++i;
}
else{
if (len != 0)
len = lsp[len - 1];
else
{
lsp[i] = 0;
++i;
} 
    }
}
return lsp; 
    }
void kmp(char *string, char *pattern)
{
int pattern_n = strlen(pattern);
int string_n = strlen(string);
if (string_n < pattern_n)
{
printf("Pattern not found\n");
return; 
}
int *lsp = calculate_lsp(pattern);
int i = 0, j = 0;
while (i < string_n)
{
if (pattern[j] == string[i])
++i, ++j;
if (j == pattern_n)
{
printf("Pattern found at %d\n", i - pattern_n);
j = lsp[j - 1];
}
else if (i < string_n && pattern[j] != string[i])
{
if (j != 0)
j = lsp[j - 1];
else ++i;
} 
    }
}
int main() {
char string[100], pattern[100];
printf("Enter string: \n"); 
scanf("%s", string); 
printf("Enter pattern: \n");
scanf("%s", pattern);
kmp(string, pattern); 
return 0; 
}
