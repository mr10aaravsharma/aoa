#include <stdio.h>
#include <time.h>
void swap(int *a, int *b)
{
    int t = *a;
    *a = *b;
    *b = t;
}
int partition(int array[], int low, int high) {
int pivot = array[high];
int i = (low - 1);
for (int j = low; j < high; j++)
{
    if (array[j] <= pivot) {
     i++;
     swap(&array[i], &array[j]);
}
}
swap(&array[i + 1], &array[high]);
return (i + 1);
}
void quickSort(int array[], int low, int high) {
    if (low < high) 
    {
    int pi = partition(array, low, high);
    quickSort(array, low, pi - 1);
    quickSort(array, pi + 1, high);
    }
}
void printArray(int array[], int size) {
for (int i = 0; i < size; ++i)
{
    printf("%d ", array[i]);
}
printf("\n");
}
int main() {
    int n;
    printf("Enter no element");
    scanf("%d",&n);
    int data[n];
    printf("Enter element");
    for(int i=0;i<n;i++)
    {
    scanf("%d",&data[i]);
    }
printf("Unsorted Array\n");
printArray(data, n);
clock_t t;
t = clock();
printf("Timer starts\n");
quickSort(data, 0, n - 1);
printf("Timer ends\n");
t = clock() - t;
double time_taken = ((double)t)/CLOCKS_PER_SEC; // calculatetheelapsed time
printf("The program took %f seconds to execute", time_taken);
printf("Sorted array in ascending order:\n");
printArray(data, n);
}